name: Flask App eTrends

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  DOCKER_REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ env.DOCKER_REGISTRY }}/${{ env.IMAGE_NAME }}:latest
            ${{ env.DOCKER_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Deploy to server
        uses: appleboy/ssh-action@v1.0.0
        env:
          DOCKER_REGISTRY: ${{ env.DOCKER_REGISTRY }}
          IMAGE_NAME: ${{ env.IMAGE_NAME }}
          GHCR_TOKEN: ${{ secrets.GHCR_TOKEN }}
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          envs: DOCKER_REGISTRY,IMAGE_NAME,GHCR_TOKEN
          script: |
            # Login to GitHub Container Registry
            echo $GHCR_TOKEN | docker login $DOCKER_REGISTRY -u ${{ github.actor }} --password-stdin
            
            # Pull the latest image
            docker pull $DOCKER_REGISTRY/$IMAGE_NAME:latest
            
            # Stop and remove existing container
            docker stop flask-app || true
            docker rm flask-app || true
            
            # Run new container
            docker run -d \
              --name flask-app \
              -p 80:80 \
              --restart unless-stopped \
              $DOCKER_REGISTRY/$IMAGE_NAME:latest


